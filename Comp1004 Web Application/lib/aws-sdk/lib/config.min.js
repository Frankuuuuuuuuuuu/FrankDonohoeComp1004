/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/config.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var PromisesDependency,AWS=require("./core");require("./credentials"),require("./credentials/credential_provider_chain"),AWS.Config=AWS.util.inherit({constructor:function(e){void 0===e&&(e={}),e=this.extractCredentials(e),AWS.util.each.call(this,this.keys,(function(n,t){this.set(n,e[n],t)}))},getCredentials:function(e){var n,t=this;function i(n){e(n,n?null:t.credentials)}function o(e,n){return new AWS.util.error(n||new Error,{code:"CredentialsError",message:e,name:"CredentialsError"})}t.credentials?"function"==typeof t.credentials.get?t.credentials.get((function(e){e&&(e=o("Could not load credentials from "+t.credentials.constructor.name,e)),i(e)})):(n=null,t.credentials.accessKeyId&&t.credentials.secretAccessKey||(n=o("Missing credentials")),i(n)):t.credentialProvider?t.credentialProvider.resolve((function(e,n){e&&(e=o("Could not load credentials from any providers",e)),t.credentials=n,i(e)})):i(o("No credentials to load"))},getToken:function(e){var n,t=this;function i(n){e(n,n?null:t.token)}function o(e,n){return new AWS.util.error(n||new Error,{code:"TokenError",message:e,name:"TokenError"})}t.token?"function"==typeof t.token.get?t.token.get((function(e){e&&(e=o("Could not load token from "+t.token.constructor.name,e)),i(e)})):(n=null,t.token.token||(n=o("Missing token")),i(n)):t.tokenProvider?t.tokenProvider.resolve((function(e,n){e&&(e=o("Could not load token from any providers",e)),t.token=n,i(e)})):i(o("No token to load"))},update:function(e,n){n=n||!1,e=this.extractCredentials(e),AWS.util.each.call(this,e,(function(e,t){(n||Object.prototype.hasOwnProperty.call(this.keys,e)||AWS.Service.hasService(e))&&this.set(e,t)}))},loadFromPath:function(e){this.clear();var n=JSON.parse(AWS.util.readFileSync(e)),t=new AWS.FileSystemCredentials(e),i=new AWS.CredentialProviderChain;return i.providers.unshift(t),i.resolve((function(e,t){if(e)throw e;n.credentials=t})),this.constructor(n),this},clear:function(){AWS.util.each.call(this,this.keys,(function(e){delete this[e]})),this.set("credentials",void 0),this.set("credentialProvider",void 0)},set:function(e,n,t){void 0===n?(void 0===t&&(t=this.keys[e]),this[e]="function"==typeof t?t.call(this):t):"httpOptions"===e&&this[e]?this[e]=AWS.util.merge(this[e],n):this[e]=n},keys:{credentials:null,credentialProvider:null,region:null,logger:null,apiVersions:{},apiVersion:null,endpoint:void 0,httpOptions:{timeout:12e4},maxRetries:void 0,maxRedirects:10,paramValidation:!0,sslEnabled:!0,s3ForcePathStyle:!1,s3BucketEndpoint:!1,s3DisableBodySigning:!0,s3UsEast1RegionalEndpoint:"legacy",s3UseArnRegion:void 0,computeChecksums:!0,convertResponseTypes:!0,correctClockSkew:!1,customUserAgent:null,dynamoDbCrc32:!0,systemClockOffset:0,signatureVersion:null,signatureCache:!0,retryDelayOptions:{},useAccelerateEndpoint:!1,clientSideMonitoring:!1,endpointDiscoveryEnabled:void 0,endpointCacheSize:1e3,hostPrefixEnabled:!0,stsRegionalEndpoints:"legacy",useFipsEndpoint:!1,useDualstackEndpoint:!1,token:null},extractCredentials:function(e){return e.accessKeyId&&e.secretAccessKey&&((e=AWS.util.copy(e)).credentials=new AWS.Credentials(e)),e},setPromisesDependency:function(e){PromisesDependency=e,null===e&&"function"==typeof Promise&&(PromisesDependency=Promise);var n=[AWS.Request,AWS.Credentials,AWS.CredentialProviderChain];AWS.S3&&(n.push(AWS.S3),AWS.S3.ManagedUpload&&n.push(AWS.S3.ManagedUpload)),AWS.util.addPromises(n,PromisesDependency)},getPromisesDependency:function(){return PromisesDependency}}),AWS.config=new AWS.Config;
//# sourceMappingURL=/sm/38c9f12ec9d280e45300cdca809937154d584a08ab5110de8804ca2f314a298d.map