/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/metadata_service.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var AWS=require("./core");require("./http");var inherit=AWS.util.inherit,getMetadataServiceEndpoint=require("./metadata_service/get_metadata_service_endpoint"),URL=require("url").URL;AWS.MetadataService=inherit({endpoint:getMetadataServiceEndpoint(),httpOptions:{timeout:0},disableFetchToken:!1,constructor:function(e){e&&e.host&&(e.endpoint="http://"+e.host,delete e.host),AWS.util.update(this,e)},request:function(e,t,a){if(2===arguments.length&&(a=t,t={}),process.env[AWS.util.imdsDisabledEnv])a(new Error("EC2 Instance Metadata Service access disabled"));else{e=e||"/",URL&&new URL(this.endpoint);var r=new AWS.HttpRequest(this.endpoint+e);r.method=t.method||"GET",t.headers&&(r.headers=t.headers),AWS.util.handleRequestWithRetries(r,this,a)}},loadCredentialsCallbacks:[],fetchMetadataToken:function(e){this.request("/latest/api/token",{method:"PUT",headers:{"x-aws-ec2-metadata-token-ttl-seconds":"21600"}},e)},fetchCredentials:function(e,t){var a=this,r="/latest/meta-data/iam/security-credentials/";a.request(r,e,(function(i,s){if(i)return a.disableFetchToken=!(401===i.statusCode),void t(AWS.util.error(i,{message:"EC2 Metadata roleName request returned error"}));s=s.split("\n")[0],a.request(r+s,e,(function(e,r){if(e)return a.disableFetchToken=!(401===e.statusCode),void t(AWS.util.error(e,{message:"EC2 Metadata creds request returned error"}));try{var i=JSON.parse(r);t(null,i)}catch(e){t(e)}}))}))},loadCredentials:function(e){var t=this;function a(e,a){for(var r;void 0!==(r=t.loadCredentialsCallbacks.shift());)r(e,a)}t.loadCredentialsCallbacks.push(e),t.loadCredentialsCallbacks.length>1||(t.disableFetchToken?t.fetchCredentials({},a):t.fetchMetadataToken((function(e,r){if(e)if("TimeoutError"===e.code)t.disableFetchToken=!0;else{if(!0===e.retryable)return void a(AWS.util.error(e,{message:"EC2 Metadata token request returned error"}));if(400===e.statusCode)return void a(AWS.util.error(e,{message:"EC2 Metadata token request returned 400"}))}var i={};r&&(i.headers={"x-aws-ec2-metadata-token":r}),t.fetchCredentials(i,a)})))}}),module.exports=AWS.MetadataService;
//# sourceMappingURL=/sm/5a8812d14278f68ee08257c24b77314a259ed1130bb422306106552e5200347f.map