/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/credentials/shared_ini_file_credentials.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var AWS=require("../core"),STS=require("../../clients/sts"),iniLoader=AWS.util.iniLoader,ASSUME_ROLE_DEFAULT_REGION="us-east-1";AWS.SharedIniFileCredentials=AWS.util.inherit(AWS.Credentials,{constructor:function(e){AWS.Credentials.call(this),e=e||{},this.filename=e.filename,this.profile=e.profile||process.env.AWS_PROFILE||AWS.util.defaultProfile,this.disableAssumeRole=Boolean(e.disableAssumeRole),this.preferStaticCredentials=Boolean(e.preferStaticCredentials),this.tokenCodeFn=e.tokenCodeFn||null,this.httpOptions=e.httpOptions||null,this.get(e.callback||AWS.util.fn.noop)},load:function(e){var i=this;try{var r=AWS.util.getProfilesFromSharedConfig(iniLoader,this.filename),s=r[this.profile]||{};if(0===Object.keys(s).length)throw AWS.util.error(new Error("Profile "+this.profile+" not found"),{code:"SharedIniFileCredentialsProviderFailure"});var o=Boolean(this.preferStaticCredentials&&s.aws_access_key_id&&s.aws_secret_access_key);if(s.role_arn&&!o)return void this.loadRoleProfile(r,s,(function(r,s){r?e(r):(i.expired=!1,i.accessKeyId=s.Credentials.AccessKeyId,i.secretAccessKey=s.Credentials.SecretAccessKey,i.sessionToken=s.Credentials.SessionToken,i.expireTime=s.Credentials.Expiration,e(null))}));if(this.accessKeyId=s.aws_access_key_id,this.secretAccessKey=s.aws_secret_access_key,this.sessionToken=s.aws_session_token,!this.accessKeyId||!this.secretAccessKey)throw AWS.util.error(new Error("Credentials not set for profile "+this.profile),{code:"SharedIniFileCredentialsProviderFailure"});this.expired=!1,e(null)}catch(i){e(i)}},refresh:function(e){iniLoader.clearCachedFiles(),this.coalesceRefresh(e||AWS.util.fn.callback,this.disableAssumeRole)},loadRoleProfile:function(e,i,r){if(this.disableAssumeRole)throw AWS.util.error(new Error("Role assumption profiles are disabled. Failed to load profile "+this.profile+" from "+e.filename),{code:"SharedIniFileCredentialsProviderFailure"});var s=i.role_arn,o=i.role_session_name,t=i.external_id,l=i.mfa_serial,n=i.source_profile,a=i.region||ASSUME_ROLE_DEFAULT_REGION;if(!n)throw AWS.util.error(new Error("source_profile is not set using profile "+this.profile),{code:"SharedIniFileCredentialsProviderFailure"});if("object"!=typeof e[n])throw AWS.util.error(new Error("source_profile "+n+" using profile "+this.profile+" does not exist"),{code:"SharedIniFileCredentialsProviderFailure"});var d=new AWS.SharedIniFileCredentials(AWS.util.merge(this.options||{},{profile:n,preferStaticCredentials:!0}));this.roleArn=s;var c=new STS({credentials:d,region:a,httpOptions:this.httpOptions}),f={RoleArn:s,RoleSessionName:o||"aws-sdk-js-"+Date.now()};if(t&&(f.ExternalId=t),l&&this.tokenCodeFn)return f.SerialNumber=l,void this.tokenCodeFn(l,(function(e,i){var s;if(e)return s=e instanceof Error?e.message:e,void r(AWS.util.error(new Error("Error fetching MFA token: "+s),{code:"SharedIniFileCredentialsProviderFailure"}));f.TokenCode=i,c.assumeRole(f,r)}));c.assumeRole(f,r)}});
//# sourceMappingURL=/sm/a90cc3b2ec2005ffcc294840048e5e231f19c874fffde622450751bc586bff6a.map