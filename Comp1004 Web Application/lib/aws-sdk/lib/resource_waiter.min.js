/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/resource_waiter.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var AWS=require("./core"),inherit=AWS.util.inherit,jmespath=require("jmespath");function CHECK_ACCEPTORS(e){var r=e.request._waiter,t=r.config.acceptors,a=!1,i="retry";t.forEach((function(t){if(!a){var s=r.matchers[t.matcher];s&&s(e,t.expected,t.argument)&&(a=!0,i=t.state)}})),!a&&e.error&&(i="failure"),"success"===i?r.setSuccess(e):r.setError(e,"retry"===i)}AWS.ResourceWaiter=inherit({constructor:function(e,r){this.service=e,this.state=r,this.loadWaiterConfig(this.state)},service:null,state:null,config:null,matchers:{path:function(e,r,t){try{var a=jmespath.search(e.data,t)}catch(e){return!1}return jmespath.strictDeepEqual(a,r)},pathAll:function(e,r,t){try{var a=jmespath.search(e.data,t)}catch(e){return!1}Array.isArray(a)||(a=[a]);var i=a.length;if(!i)return!1;for(var s=0;s<i;s++)if(!jmespath.strictDeepEqual(a[s],r))return!1;return!0},pathAny:function(e,r,t){try{var a=jmespath.search(e.data,t)}catch(e){return!1}Array.isArray(a)||(a=[a]);for(var i=a.length,s=0;s<i;s++)if(jmespath.strictDeepEqual(a[s],r))return!0;return!1},status:function(e,r){var t=e.httpResponse.statusCode;return"number"==typeof t&&t===r},error:function(e,r){return"string"==typeof r&&e.error?r===e.error.code:r===!!e.error}},listeners:(new AWS.SequentialExecutor).addNamedListeners((function(e){e("RETRY_CHECK","retry",(function(e){var r=e.request._waiter;e.error&&"ResourceNotReady"===e.error.code&&(e.error.retryDelay=1e3*(r.config.delay||0))})),e("CHECK_OUTPUT","extractData",CHECK_ACCEPTORS),e("CHECK_ERROR","extractError",CHECK_ACCEPTORS)})),wait:function(e,r){"function"==typeof e&&(r=e,e=void 0),e&&e.$waiter&&("number"==typeof(e=AWS.util.copy(e)).$waiter.delay&&(this.config.delay=e.$waiter.delay),"number"==typeof e.$waiter.maxAttempts&&(this.config.maxAttempts=e.$waiter.maxAttempts),delete e.$waiter);var t=this.service.makeRequest(this.config.operation,e);return t._waiter=this,t.response.maxRetries=this.config.maxAttempts,t.addListeners(this.listeners),r&&t.send(r),t},setSuccess:function(e){e.error=null,e.data=e.data||{},e.request.removeAllListeners("extractData")},setError:function(e,r){e.data=null,e.error=AWS.util.error(e.error||new Error,{code:"ResourceNotReady",message:"Resource is not in the state "+this.state,retryable:r})},loadWaiterConfig:function(e){if(!this.service.api.waiters[e])throw new AWS.util.error(new Error,{code:"StateNotFoundError",message:"State "+e+" not found."});this.config=AWS.util.copy(this.service.api.waiters[e])}});
//# sourceMappingURL=/sm/05717b4195de71955e14cab867b3da09b123f1d9a18e2d59dcff4e9f54d8b6b6.map