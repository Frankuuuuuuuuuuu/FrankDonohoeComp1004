/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/services/s3util.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var AWS=require("../core"),regionUtil=require("../region_config"),s3util={isArnInParam:function(e,r){var o=((e.service.api.operations[e.operation]||{}).input||{}).members||{};return!(!e.params[r]||!o[r])&&AWS.util.ARN.validate(e.params[r])},validateArnService:function(e){var r=e._parsedArn;if("s3"!==r.service&&"s3-outposts"!==r.service&&"s3-object-lambda"!==r.service)throw AWS.util.error(new Error,{code:"InvalidARN",message:"expect 's3' or 's3-outposts' or 's3-object-lambda' in ARN service component"})},validateArnAccount:function(e){var r=e._parsedArn;if(!/[0-9]{12}/.exec(r.accountId))throw AWS.util.error(new Error,{code:"InvalidARN",message:'ARN accountID does not match regex "[0-9]{12}"'})},validateS3AccessPointArn:function(e){var r=e._parsedArn,o=r.resource["accesspoint".length];if(2!==r.resource.split(o).length)throw AWS.util.error(new Error,{code:"InvalidARN",message:"Access Point ARN should have one resource accesspoint/{accesspointName}"});var i=r.resource.split(o)[1],t=i+"-"+r.accountId;if(!s3util.dnsCompatibleBucketName(t)||t.match(/\./))throw AWS.util.error(new Error,{code:"InvalidARN",message:"Access point resource in ARN is not DNS compatible. Got "+i});e._parsedArn.accessPoint=i},validateOutpostsArn:function(e){var r=e._parsedArn;if(0!==r.resource.indexOf("outpost:")&&0!==r.resource.indexOf("outpost/"))throw AWS.util.error(new Error,{code:"InvalidARN",message:"ARN resource should begin with 'outpost/'"});var o=r.resource["outpost".length],i=r.resource.split(o)[1];if(!new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/).test(i))throw AWS.util.error(new Error,{code:"InvalidARN",message:"Outpost resource in ARN is not DNS compatible. Got "+i});e._parsedArn.outpostId=i},validateOutpostsAccessPointArn:function(e){var r=e._parsedArn,o=r.resource["outpost".length];if(4!==r.resource.split(o).length)throw AWS.util.error(new Error,{code:"InvalidARN",message:"Outposts ARN should have two resources outpost/{outpostId}/accesspoint/{accesspointName}"});var i=r.resource.split(o)[3],t=i+"-"+r.accountId;if(!s3util.dnsCompatibleBucketName(t)||t.match(/\./))throw AWS.util.error(new Error,{code:"InvalidARN",message:"Access point resource in ARN is not DNS compatible. Got "+i});e._parsedArn.accessPoint=i},validateArnRegion:function(e,r){void 0===r&&(r={});var o=s3util.loadUseArnRegionConfig(e),i=e._parsedArn.region,t=e.service.config.region,n=e.service.config.useFipsEndpoint,s=r.allowFipsEndpoint||!1;if(!i){var a="ARN region is empty";throw"s3"===e._parsedArn.service&&(a+="\nYou may want to use multi-regional ARN. The feature is not supported in current SDK. You should consider switching to V3(https://github.com/aws/aws-sdk-js-v3)."),AWS.util.error(new Error,{code:"InvalidARN",message:a})}if(n&&!s)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:"ARN endpoint is not compatible with FIPS region"});if(i.indexOf("fips")>=0)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:"FIPS region not allowed in ARN"});if(!o&&i!==t)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:"Configured region conflicts with access point region"});if(o&&regionUtil.getEndpointSuffix(i)!==regionUtil.getEndpointSuffix(t))throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:"Configured region and access point region not in same partition"});if(e.service.config.useAccelerateEndpoint)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:"useAccelerateEndpoint config is not supported with access point ARN"});if("s3-outposts"===e._parsedArn.service&&e.service.config.useDualstackEndpoint)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:"Dualstack is not supported with outposts access point ARN"})},loadUseArnRegionConfig:function(e){var r="AWS_S3_USE_ARN_REGION",o="s3_use_arn_region",i=!0,t=e.service._originalConfig||{};if(void 0!==e.service.config.s3UseArnRegion)return e.service.config.s3UseArnRegion;if(void 0!==t.s3UseArnRegion)i=!0===t.s3UseArnRegion;else if(AWS.util.isNode())if(process.env[r]){var n=process.env[r].trim().toLowerCase();if(["false","true"].indexOf(n)<0)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:r+" only accepts true or false. Got "+process.env[r],retryable:!1});i="true"===n}else{var s={};try{s=AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader)[process.env.AWS_PROFILE||AWS.util.defaultProfile]}catch(e){}if(s[o]){if(["false","true"].indexOf(s[o].trim().toLowerCase())<0)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:o+" only accepts true or false. Got "+s[o],retryable:!1});i="true"===s[o].trim().toLowerCase()}}return e.service.config.s3UseArnRegion=i,i},validatePopulateUriFromArn:function(e){if(e.service._originalConfig&&e.service._originalConfig.endpoint)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:"Custom endpoint is not compatible with access point ARN"});if(e.service.config.s3ForcePathStyle)throw AWS.util.error(new Error,{code:"InvalidConfiguration",message:"Cannot construct path-style endpoint with access point"})},dnsCompatibleBucketName:function(e){var r=e,o=new RegExp(/^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/),i=new RegExp(/(\d+\.){3}\d+/),t=new RegExp(/\.\./);return!(!r.match(o)||r.match(i)||r.match(t))}};module.exports=s3util;
//# sourceMappingURL=/sm/4b196f3c8c50d08c229f2ed5dc9b8caabc9cd99888bafda28c88d4eb869aa522.map