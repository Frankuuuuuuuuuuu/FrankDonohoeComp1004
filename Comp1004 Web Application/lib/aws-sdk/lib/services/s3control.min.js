/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/services/s3control.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var AWS=require("../core"),s3util=require("./s3util"),regionUtil=require("../region_config");AWS.util.update(AWS.S3Control.prototype,{setupRequestListeners:function(e){e.addListener("extractError",this.extractHostId),e.addListener("extractData",this.extractHostId),e.addListener("validate",this.validateAccountId);var t=s3util.isArnInParam(e,"Bucket"),r=s3util.isArnInParam(e,"Name");t?(e._parsedArn=AWS.util.ARN.parse(e.params.Bucket),e.addListener("validate",this.validateOutpostsBucketArn),e.addListener("validate",s3util.validateOutpostsArn),e.addListener("afterBuild",this.addOutpostIdHeader)):r&&(e._parsedArn=AWS.util.ARN.parse(e.params.Name),e.addListener("validate",s3util.validateOutpostsAccessPointArn),e.addListener("validate",s3util.validateOutpostsArn),e.addListener("afterBuild",this.addOutpostIdHeader)),(t||r)&&(e.addListener("validate",this.validateArnRegion),e.addListener("validate",this.validateArnAccountWithParams,!0),e.addListener("validate",s3util.validateArnAccount),e.addListener("validate",s3util.validateArnService),e.addListener("build",this.populateParamFromArn,!0),e.addListener("build",this.populateUriFromArn),e.addListener("build",s3util.validatePopulateUriFromArn)),!e.params.OutpostId||"createBucket"!==e.operation&&"listRegionalBuckets"!==e.operation||e.addListener("build",this.populateEndpointForOutpostId)},addOutpostIdHeader:function(e){e.httpRequest.headers["x-amz-outpost-id"]=e._parsedArn.outpostId},validateOutpostsBucketArn:function(e){var t=e._parsedArn,r=t.resource["outpost".length];if(4!==t.resource.split(r).length)throw AWS.util.error(new Error,{code:"InvalidARN",message:"Bucket ARN should have two resources outpost/{outpostId}/bucket/{accesspointName}"});var a=t.resource.split(r)[3];if(!s3util.dnsCompatibleBucketName(a)||a.match(/\./))throw AWS.util.error(new Error,{code:"InvalidARN",message:"Bucket ARN is not DNS compatible. Got "+a});e._parsedArn.bucket=a},populateParamFromArn:function(e){var t=e._parsedArn;s3util.isArnInParam(e,"Bucket")?e.params.Bucket=t.bucket:s3util.isArnInParam(e,"Name")&&(e.params.Name=t.accessPoint)},populateUriFromArn:function(e){var t=e._parsedArn,r=e.httpRequest.endpoint,a=e.service.config.s3UseArnRegion,i=e.service.config.useFipsEndpoint;r.hostname=["s3-outposts"+(i?"-fips":""),a?t.region:e.service.config.region,"amazonaws.com"].join("."),r.host=r.hostname},populateEndpointForOutpostId:function(e){var t=e.httpRequest.endpoint,r=e.service.config.useFipsEndpoint;t.hostname=["s3-outposts"+(r?"-fips":""),e.service.config.region,"amazonaws.com"].join("."),t.host=t.hostname},extractHostId:function(e){var t=e.httpResponse.headers?e.httpResponse.headers["x-amz-id-2"]:null;e.extendedRequestId=t,e.error&&(e.error.extendedRequestId=t)},validateArnRegion:function(e){s3util.validateArnRegion(e,{allowFipsEndpoint:!0})},validateArnAccountWithParams:function(e){var t=e.params;if(e.service.api.operations[e.operation].input.members.AccountId){var r=e._parsedArn;if(r.accountId)if(t.AccountId){if(t.AccountId!==r.accountId)throw AWS.util.error(new Error,{code:"ValidationError",message:"AccountId in ARN and request params should be same."})}else t.AccountId=r.accountId}},validateAccountId:function(e){var t=e.params;if(Object.prototype.hasOwnProperty.call(t,"AccountId")){var r=t.AccountId;if("string"!=typeof r)throw AWS.util.error(new Error,{code:"ValidationError",message:"AccountId must be a string."});if(r.length<1||r.length>63)throw AWS.util.error(new Error,{code:"ValidationError",message:"AccountId length should be between 1 to 63 characters, inclusive."});if(!/^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9]$/.test(r))throw AWS.util.error(new Error,{code:"ValidationError",message:"AccountId should be hostname compatible. AccountId: "+r})}},getSigningName:function(e){var t=AWS.Service.prototype.getSigningName;return e&&e._parsedArn&&e._parsedArn.service?e._parsedArn.service:!e.params.OutpostId||"createBucket"!==e.operation&&"listRegionalBuckets"!==e.operation?t.call(this,e):"s3-outposts"}});
//# sourceMappingURL=/sm/c3e6cc0b3ca661efed0fe50b5c62fb19eba2e2256f62ae86f987af23e66b257b.map