/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/services/sqs.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var AWS=require("../core");AWS.util.update(AWS.SQS.prototype,{setupRequestListeners:function(e){e.addListener("build",this.buildEndpoint),e.service.config.computeChecksums&&("sendMessage"===e.operation?e.addListener("extractData",this.verifySendMessageChecksum):"sendMessageBatch"===e.operation?e.addListener("extractData",this.verifySendMessageBatchChecksum):"receiveMessage"===e.operation&&e.addListener("extractData",this.verifyReceiveMessageChecksum))},verifySendMessageChecksum:function(e){if(e.data){var s=e.data.MD5OfMessageBody,a=this.params.MessageBody,t=this.service.calculateChecksum(a);if(t!==s){var i='Got "'+e.data.MD5OfMessageBody+'", expecting "'+t+'".';this.service.throwInvalidChecksumError(e,[e.data.MessageId],i)}}},verifySendMessageBatchChecksum:function(e){if(e.data){var s=this.service,a={},t=[],i=[];AWS.util.arrayEach(e.data.Successful,(function(e){a[e.Id]=e})),AWS.util.arrayEach(this.params.Entries,(function(e){if(a[e.Id]){var r=a[e.Id].MD5OfMessageBody,n=e.MessageBody;s.isChecksumValid(r,n)||(t.push(e.Id),i.push(a[e.Id].MessageId))}})),t.length>0&&s.throwInvalidChecksumError(e,i,"Invalid messages: "+t.join(", "))}},verifyReceiveMessageChecksum:function(e){if(e.data){var s=this.service,a=[];AWS.util.arrayEach(e.data.Messages,(function(e){var t=e.MD5OfBody,i=e.Body;s.isChecksumValid(t,i)||a.push(e.MessageId)})),a.length>0&&s.throwInvalidChecksumError(e,a,"Invalid messages: "+a.join(", "))}},throwInvalidChecksumError:function(e,s,a){e.error=AWS.util.error(new Error,{retryable:!0,code:"InvalidChecksum",messageIds:s,message:e.request.operation+" returned an invalid MD5 response. "+a})},isChecksumValid:function(e,s){return this.calculateChecksum(s)===e},calculateChecksum:function(e){return AWS.util.crypto.md5(e,"hex")},buildEndpoint:function(e){var s=e.httpRequest.params.QueueUrl;if(s){e.httpRequest.endpoint=new AWS.Endpoint(s);var a=e.httpRequest.endpoint.host.match(/^sqs\.(.+?)\./);a&&(e.httpRequest.region=a[1])}}});
//# sourceMappingURL=/sm/a9e3fe9ac59aba2f31cf7b8cd01952696c0555edf31a15ff501258d2ac76effe.map