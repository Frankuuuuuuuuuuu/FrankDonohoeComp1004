/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/service.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var AWS=require("./core"),Api=require("./model/api"),regionConfig=require("./region_config"),inherit=AWS.util.inherit,clientCount=0,region_utils=require("./region/utils");AWS.Service=inherit({constructor:function(e){if(!this.loadServiceClass)throw AWS.util.error(new Error,"Service must be constructed with `new' operator");if(e){if(e.region){var t=e.region;region_utils.isFipsRegion(t)&&(e.region=region_utils.getRealRegion(t),e.useFipsEndpoint=!0),region_utils.isGlobalRegion(t)&&(e.region=region_utils.getRealRegion(t))}"boolean"==typeof e.useDualstack&&"boolean"!=typeof e.useDualstackEndpoint&&(e.useDualstackEndpoint=e.useDualstack)}var i=this.loadServiceClass(e||{});if(i){var n=AWS.util.copy(e),r=new i(e);return Object.defineProperty(r,"_originalConfig",{get:function(){return n},enumerable:!1,configurable:!0}),r._clientId=++clientCount,r}this.initialize(e)},initialize:function(e){var t=AWS.config[this.serviceIdentifier];if(this.config=new AWS.Config(AWS.config),t&&this.config.update(t,!0),e&&this.config.update(e,!0),this.validateService(),this.config.endpoint||regionConfig.configureEndpoint(this),this.config.endpoint=this.endpointFromTemplate(this.config.endpoint),this.setEndpoint(this.config.endpoint),AWS.SequentialExecutor.call(this),AWS.Service.addDefaultMonitoringListeners(this),(this.config.clientSideMonitoring||AWS.Service._clientSideMonitoring)&&this.publisher){var i=this.publisher;this.addNamedListener("PUBLISH_API_CALL","apiCall",(function(e){process.nextTick((function(){i.eventHandler(e)}))})),this.addNamedListener("PUBLISH_API_ATTEMPT","apiCallAttempt",(function(e){process.nextTick((function(){i.eventHandler(e)}))}))}},validateService:function(){},loadServiceClass:function(e){var t=e;if(AWS.util.isEmpty(this.api)){if(t.apiConfig)return AWS.Service.defineServiceApi(this.constructor,t.apiConfig);if(this.constructor.services){(t=new AWS.Config(AWS.config)).update(e,!0);var i=t.apiVersions[this.constructor.serviceIdentifier];return i=i||t.apiVersion,this.getLatestServiceClass(i)}return null}return null},getLatestServiceClass:function(e){return e=this.getLatestServiceVersion(e),null===this.constructor.services[e]&&AWS.Service.defineServiceApi(this.constructor,e),this.constructor.services[e]},getLatestServiceVersion:function(e){if(!this.constructor.services||0===this.constructor.services.length)throw new Error("No services defined on "+this.constructor.serviceIdentifier);if(e?AWS.util.isType(e,Date)&&(e=AWS.util.date.iso8601(e).split("T")[0]):e="latest",Object.hasOwnProperty(this.constructor.services,e))return e;for(var t=Object.keys(this.constructor.services).sort(),i=null,n=t.length-1;n>=0;n--)if("*"!==t[n][t[n].length-1]&&(i=t[n]),t[n].substr(0,10)<=e)return i;throw new Error("Could not find "+this.constructor.serviceIdentifier+" API to satisfy version constraint `"+e+"'")},api:{},defaultRetryCount:3,customizeRequests:function(e){if(e){if("function"!=typeof e)throw new Error("Invalid callback type '"+typeof e+"' provided in customizeRequests");this.customRequestHandler=e}else this.customRequestHandler=null},makeRequest:function(e,t,i){if("function"==typeof t&&(i=t,t=null),t=t||{},this.config.params){var n=this.api.operations[e];n&&(t=AWS.util.copy(t),AWS.util.each(this.config.params,(function(e,i){n.input.members[e]&&(void 0!==t[e]&&null!==t[e]||(t[e]=i))})))}var r=new AWS.Request(this,e,t);return this.addAllRequestListeners(r),this.attachMonitoringEmitter(r),i&&r.send(i),r},makeUnauthenticatedRequest:function(e,t,i){"function"==typeof t&&(i=t,t={});var n=this.makeRequest(e,t).toUnauthenticated();return i?n.send(i):n},waitFor:function(e,t,i){return new AWS.ResourceWaiter(this,e).wait(t,i)},addAllRequestListeners:function(e){for(var t=[AWS.events,AWS.EventListeners.Core,this.serviceInterface(),AWS.EventListeners.CorePost],i=0;i<t.length;i++)t[i]&&e.addListeners(t[i]);this.config.paramValidation||e.removeListener("validate",AWS.EventListeners.Core.VALIDATE_PARAMETERS),this.config.logger&&e.addListeners(AWS.EventListeners.Logger),this.setupRequestListeners(e),"function"==typeof this.constructor.prototype.customRequestHandler&&this.constructor.prototype.customRequestHandler(e),Object.prototype.hasOwnProperty.call(this,"customRequestHandler")&&"function"==typeof this.customRequestHandler&&this.customRequestHandler(e)},apiCallEvent:function(e){var t=e.service.api.operations[e.operation],i={Type:"ApiCall",Api:t?t.name:e.operation,Version:1,Service:e.service.api.serviceId||e.service.api.endpointPrefix,Region:e.httpRequest.region,MaxRetriesExceeded:0,UserAgent:e.httpRequest.getUserAgent()},n=e.response;if(n.httpResponse.statusCode&&(i.FinalHttpStatusCode=n.httpResponse.statusCode),n.error){var r=n.error;n.httpResponse.statusCode>299?(r.code&&(i.FinalAwsException=r.code),r.message&&(i.FinalAwsExceptionMessage=r.message)):((r.code||r.name)&&(i.FinalSdkException=r.code||r.name),r.message&&(i.FinalSdkExceptionMessage=r.message))}return i},apiAttemptEvent:function(e){var t=e.service.api.operations[e.operation],i={Type:"ApiCallAttempt",Api:t?t.name:e.operation,Version:1,Service:e.service.api.serviceId||e.service.api.endpointPrefix,Fqdn:e.httpRequest.endpoint.hostname,UserAgent:e.httpRequest.getUserAgent()},n=e.response;return n.httpResponse.statusCode&&(i.HttpStatusCode=n.httpResponse.statusCode),!e._unAuthenticated&&e.service.config.credentials&&e.service.config.credentials.accessKeyId&&(i.AccessKey=e.service.config.credentials.accessKeyId),n.httpResponse.headers?(e.httpRequest.headers["x-amz-security-token"]&&(i.SessionToken=e.httpRequest.headers["x-amz-security-token"]),n.httpResponse.headers["x-amzn-requestid"]&&(i.XAmznRequestId=n.httpResponse.headers["x-amzn-requestid"]),n.httpResponse.headers["x-amz-request-id"]&&(i.XAmzRequestId=n.httpResponse.headers["x-amz-request-id"]),n.httpResponse.headers["x-amz-id-2"]&&(i.XAmzId2=n.httpResponse.headers["x-amz-id-2"]),i):i},attemptFailEvent:function(e){var t=this.apiAttemptEvent(e),i=e.response,n=i.error;return i.httpResponse.statusCode>299?(n.code&&(t.AwsException=n.code),n.message&&(t.AwsExceptionMessage=n.message)):((n.code||n.name)&&(t.SdkException=n.code||n.name),n.message&&(t.SdkExceptionMessage=n.message)),t},attachMonitoringEmitter:function(e){var t,i,n,r,s,o,a=0,c=this;e.on("validate",(function(){r=AWS.util.realClock.now(),o=Date.now()}),true),e.on("sign",(function(){i=AWS.util.realClock.now(),t=Date.now(),s=e.httpRequest.region,a++}),true),e.on("validateResponse",(function(){n=Math.round(AWS.util.realClock.now()-i)})),e.addNamedListener("API_CALL_ATTEMPT","success",(function(){var i=c.apiAttemptEvent(e);i.Timestamp=t,i.AttemptLatency=n>=0?n:0,i.Region=s,c.emit("apiCallAttempt",[i])})),e.addNamedListener("API_CALL_ATTEMPT_RETRY","retry",(function(){var r=c.attemptFailEvent(e);r.Timestamp=t,n=n||Math.round(AWS.util.realClock.now()-i),r.AttemptLatency=n>=0?n:0,r.Region=s,c.emit("apiCallAttempt",[r])})),e.addNamedListener("API_CALL","complete",(function(){var t=c.apiCallEvent(e);if(t.AttemptCount=a,!(t.AttemptCount<=0)){t.Timestamp=o;var i=Math.round(AWS.util.realClock.now()-r);t.Latency=i>=0?i:0;var n=e.response;n.error&&n.error.retryable&&"number"==typeof n.retryCount&&"number"==typeof n.maxRetries&&n.retryCount>=n.maxRetries&&(t.MaxRetriesExceeded=1),c.emit("apiCall",[t])}}))},setupRequestListeners:function(e){},getSigningName:function(){return this.api.signingName||this.api.endpointPrefix},getSignerClass:function(e){var t,i=null,n="";e&&(n=(i=(e.service.api.operations||{})[e.operation]||null)?i.authtype:"");return t=this.config.signatureVersion?this.config.signatureVersion:"v4"===n||"v4-unsigned-body"===n?"v4":"bearer"===n?"bearer":this.api.signatureVersion,AWS.Signers.RequestSigner.getVersion(t)},serviceInterface:function(){switch(this.api.protocol){case"ec2":case"query":return AWS.EventListeners.Query;case"json":return AWS.EventListeners.Json;case"rest-json":return AWS.EventListeners.RestJson;case"rest-xml":return AWS.EventListeners.RestXml}if(this.api.protocol)throw new Error("Invalid service `protocol' "+this.api.protocol+" in API config")},successfulResponse:function(e){return e.httpResponse.statusCode<300},numRetries:function(){return void 0!==this.config.maxRetries?this.config.maxRetries:this.defaultRetryCount},retryDelays:function(e,t){return AWS.util.calculateRetryDelay(e,this.config.retryDelayOptions,t)},retryableError:function(e){return!!this.timeoutError(e)||(!!this.networkingError(e)||(!!this.expiredCredentialsError(e)||(!!this.throttledError(e)||e.statusCode>=500)))},networkingError:function(e){return"NetworkingError"===e.code},timeoutError:function(e){return"TimeoutError"===e.code},expiredCredentialsError:function(e){return"ExpiredTokenException"===e.code},clockSkewError:function(e){switch(e.code){case"RequestTimeTooSkewed":case"RequestExpired":case"InvalidSignatureException":case"SignatureDoesNotMatch":case"AuthFailure":case"RequestInTheFuture":return!0;default:return!1}},getSkewCorrectedDate:function(){return new Date(Date.now()+this.config.systemClockOffset)},applyClockOffset:function(e){e&&(this.config.systemClockOffset=e-Date.now())},isClockSkewed:function(e){if(e)return Math.abs(this.getSkewCorrectedDate().getTime()-e)>=3e5},throttledError:function(e){if(429===e.statusCode)return!0;switch(e.code){case"ProvisionedThroughputExceededException":case"Throttling":case"ThrottlingException":case"RequestLimitExceeded":case"RequestThrottled":case"RequestThrottledException":case"TooManyRequestsException":case"TransactionInProgressException":case"EC2ThrottledException":return!0;default:return!1}},endpointFromTemplate:function(e){if("string"!=typeof e)return e;var t=e;return t=(t=(t=t.replace(/\{service\}/g,this.api.endpointPrefix)).replace(/\{region\}/g,this.config.region)).replace(/\{scheme\}/g,this.config.sslEnabled?"https":"http")},setEndpoint:function(e){this.endpoint=new AWS.Endpoint(e,this.config)},paginationConfig:function(e,t){var i=this.api.operations[e].paginator;if(!i){if(t){var n=new Error;throw AWS.util.error(n,"No pagination configuration for "+e)}return null}return i}}),AWS.util.update(AWS.Service,{defineMethods:function(e){AWS.util.each(e.prototype.api.operations,(function(t){e.prototype[t]||("none"===e.prototype.api.operations[t].authtype?e.prototype[t]=function(e,i){return this.makeUnauthenticatedRequest(t,e,i)}:e.prototype[t]=function(e,i){return this.makeRequest(t,e,i)})}))},defineService:function(e,t,i){AWS.Service._serviceMap[e]=!0,Array.isArray(t)||(i=t,t=[]);var n=inherit(AWS.Service,i||{});if("string"==typeof e){AWS.Service.addVersions(n,t);var r=n.serviceIdentifier||e;n.serviceIdentifier=r}else n.prototype.api=e,AWS.Service.defineMethods(n);if(AWS.SequentialExecutor.call(this.prototype),!this.prototype.publisher&&AWS.util.clientSideMonitoring){var s=AWS.util.clientSideMonitoring.Publisher,o=(0,AWS.util.clientSideMonitoring.configProvider)();this.prototype.publisher=new s(o),o.enabled&&(AWS.Service._clientSideMonitoring=!0)}return AWS.SequentialExecutor.call(n.prototype),AWS.Service.addDefaultMonitoringListeners(n.prototype),n},addVersions:function(e,t){Array.isArray(t)||(t=[t]),e.services=e.services||{};for(var i=0;i<t.length;i++)void 0===e.services[t[i]]&&(e.services[t[i]]=null);e.apiVersions=Object.keys(e.services).sort()},defineServiceApi:function(e,t,i){var n=inherit(e,{serviceIdentifier:e.serviceIdentifier});function r(t){t.isApi?n.prototype.api=t:n.prototype.api=new Api(t,{serviceIdentifier:e.serviceIdentifier})}if("string"==typeof t){if(i)r(i);else try{r(AWS.apiLoader(e.serviceIdentifier,t))}catch(i){throw AWS.util.error(i,{message:"Could not find API configuration "+e.serviceIdentifier+"-"+t})}Object.prototype.hasOwnProperty.call(e.services,t)||(e.apiVersions=e.apiVersions.concat(t).sort()),e.services[t]=n}else r(t);return AWS.Service.defineMethods(n),n},hasService:function(e){return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap,e)},addDefaultMonitoringListeners:function(e){e.addNamedListener("MONITOR_EVENTS_BUBBLE","apiCallAttempt",(function(t){var i=Object.getPrototypeOf(e);i._events&&i.emit("apiCallAttempt",[t])})),e.addNamedListener("CALL_EVENTS_BUBBLE","apiCall",(function(t){var i=Object.getPrototypeOf(e);i._events&&i.emit("apiCall",[t])}))},_serviceMap:{}}),AWS.util.mixin(AWS.Service,AWS.SequentialExecutor),module.exports=AWS.Service;
//# sourceMappingURL=/sm/2a53444f94110bf9e86c0784bc99e4dd6f3183584ba40b43971445772229853e.map