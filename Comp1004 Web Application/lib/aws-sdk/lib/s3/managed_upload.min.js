/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/lib/s3/managed_upload.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var AWS=require("../core"),byteLength=AWS.util.string.byteLength,Buffer=AWS.util.Buffer;AWS.S3.ManagedUpload=AWS.util.inherit({constructor:function(e){var t=this;AWS.SequentialExecutor.call(t),t.body=null,t.sliceFn=null,t.callback=null,t.parts={},t.completeInfo=[],t.fillQueue=function(){t.callback(new Error("Unsupported body payload "+typeof t.body))},t.configure(e)},configure:function(e){if(e=e||{},this.partSize=this.minPartSize,e.queueSize&&(this.queueSize=e.queueSize),e.partSize&&(this.partSize=e.partSize),e.leavePartsOnError&&(this.leavePartsOnError=!0),e.tags){if(!Array.isArray(e.tags))throw new Error("Tags must be specified as an array; "+typeof e.tags+" provided.");this.tags=e.tags}if(this.partSize<this.minPartSize)throw new Error("partSize must be greater than "+this.minPartSize);this.service=e.service,this.bindServiceObject(e.params),this.validateBody(),this.adjustTotalBytes()},leavePartsOnError:!1,queueSize:4,partSize:null,minPartSize:5242880,maxTotalParts:1e4,send:function(e){var t=this;t.failed=!1,t.callback=e||function(e){if(e)throw e};var r=!0;if(t.sliceFn)t.fillQueue=t.fillBuffer;else if(AWS.util.isNode()){var a=AWS.util.stream.Stream;t.body instanceof a&&(r=!1,t.fillQueue=t.fillStream,t.partBuffers=[],t.body.on("error",(function(e){t.cleanup(e)})).on("readable",(function(){t.fillQueue()})).on("end",(function(){t.isDoneChunking=!0,t.numParts=t.totalPartNumbers,t.fillQueue.call(t),t.isDoneChunking&&t.totalPartNumbers>=1&&t.doneParts===t.numParts&&t.finishMultiPart()})))}r&&t.fillQueue.call(t)},abort:function(){var e=this;!0===e.isDoneChunking&&1===e.totalPartNumbers&&e.singlePart?e.singlePart.abort():e.cleanup(AWS.util.error(new Error("Request aborted by user"),{code:"RequestAbortedError",retryable:!1}))},validateBody:function(){var e=this;if(e.body=e.service.config.params.Body,"string"==typeof e.body)e.body=AWS.util.buffer.toBuffer(e.body);else if(!e.body)throw new Error("params.Body is required");e.sliceFn=AWS.util.arraySliceFn(e.body)},bindServiceObject:function(e){e=e||{};var t=this;if(t.service){var r=t.service,a=AWS.util.copy(r.config);a.signatureVersion=r.getSignatureVersion(),t.service=new r.constructor.__super__(a),t.service.config.params=AWS.util.merge(t.service.config.params||{},e),Object.defineProperty(t.service,"_originalConfig",{get:function(){return r._originalConfig},enumerable:!1,configurable:!0})}else t.service=new AWS.S3({params:e})},adjustTotalBytes:function(){var e=this;try{e.totalBytes=byteLength(e.body)}catch(e){}if(e.totalBytes){var t=Math.ceil(e.totalBytes/e.maxTotalParts);t>e.partSize&&(e.partSize=t)}else e.totalBytes=void 0},isDoneChunking:!1,partPos:0,totalChunkedBytes:0,totalUploadedBytes:0,totalBytes:void 0,numParts:0,totalPartNumbers:0,activeParts:0,doneParts:0,parts:null,completeInfo:null,failed:!1,multipartReq:null,partBuffers:null,partBufferLength:0,fillBuffer:function(){var e=this,t=byteLength(e.body);if(0===t)return e.isDoneChunking=!0,e.numParts=1,void e.nextChunk(e.body);for(;e.activeParts<e.queueSize&&e.partPos<t;){var r=Math.min(e.partPos+e.partSize,t),a=e.sliceFn.call(e.body,e.partPos,r);e.partPos+=e.partSize,(byteLength(a)<e.partSize||e.partPos===t)&&(e.isDoneChunking=!0,e.numParts=e.totalPartNumbers+1),e.nextChunk(a)}},fillStream:function(){var e=this;if(!(e.activeParts>=e.queueSize)){var t=e.body.read(e.partSize-e.partBufferLength)||e.body.read();if(t&&(e.partBuffers.push(t),e.partBufferLength+=t.length,e.totalChunkedBytes+=t.length),e.partBufferLength>=e.partSize){var r=1===e.partBuffers.length?e.partBuffers[0]:Buffer.concat(e.partBuffers);if(e.partBuffers=[],e.partBufferLength=0,r.length>e.partSize){var a=r.slice(e.partSize);e.partBuffers.push(a),e.partBufferLength+=a.length,r=r.slice(0,e.partSize)}e.nextChunk(r)}e.isDoneChunking&&!e.isDoneSending&&(r=1===e.partBuffers.length?e.partBuffers[0]:Buffer.concat(e.partBuffers),e.partBuffers=[],e.partBufferLength=0,e.totalBytes=e.totalChunkedBytes,e.isDoneSending=!0,(0===e.numParts||r.length>0)&&(e.numParts++,e.nextChunk(r))),e.body.read(0)}},nextChunk:function(e){var t=this;if(t.failed)return null;var r=++t.totalPartNumbers;if(t.isDoneChunking&&1===r){var a={Body:e};this.tags&&(a.Tagging=this.getTaggingHeader());var i=t.service.putObject(a);return i._managedUpload=t,i.on("httpUploadProgress",t.progress).send(t.finishSinglePart),t.singlePart=i,null}if(t.service.config.params.ContentMD5){var n=AWS.util.error(new Error("The Content-MD5 you specified is invalid for multi-part uploads."),{code:"InvalidDigest",retryable:!1});return t.cleanup(n),null}if(t.completeInfo[r]&&null!==t.completeInfo[r].ETag)return null;t.activeParts++,t.service.config.params.UploadId?t.uploadPart(e,r):t.multipartReq?t.queueChunks(e,r):(t.multipartReq=t.service.createMultipartUpload(),t.multipartReq.on("success",(function(e){t.service.config.params.UploadId=e.data.UploadId,t.multipartReq=null})),t.queueChunks(e,r),t.multipartReq.on("error",(function(e){t.cleanup(e)})),t.multipartReq.send())},getTaggingHeader:function(){for(var e=[],t=0;t<this.tags.length;t++)e.push(AWS.util.uriEscape(this.tags[t].Key)+"="+AWS.util.uriEscape(this.tags[t].Value));return e.join("&")},uploadPart:function(e,t){var r=this,a={Body:e,ContentLength:AWS.util.string.byteLength(e),PartNumber:t},i={ETag:null,PartNumber:t};r.completeInfo[t]=i;var n=r.service.uploadPart(a);r.parts[t]=n,n._lastUploadedBytes=0,n._managedUpload=r,n.on("httpUploadProgress",r.progress),n.send((function(e,n){if(delete r.parts[a.PartNumber],r.activeParts--,!(e||n&&n.ETag)){var s="No access to ETag property on response.";AWS.util.isBrowser()&&(s+=" Check CORS configuration to expose ETag header."),e=AWS.util.error(new Error(s),{code:"ETagMissing",retryable:!1})}return e?r.cleanup(e):r.completeInfo[t]&&null!==r.completeInfo[t].ETag?null:(i.ETag=n.ETag,r.doneParts++,void(r.isDoneChunking&&r.doneParts===r.totalPartNumbers?r.finishMultiPart():r.fillQueue.call(r)))}))},queueChunks:function(e,t){var r=this;r.multipartReq.on("success",(function(){r.uploadPart(e,t)}))},cleanup:function(e){var t=this;t.failed||("function"==typeof t.body.removeAllListeners&&"function"==typeof t.body.resume&&(t.body.removeAllListeners("readable"),t.body.removeAllListeners("end"),t.body.resume()),t.multipartReq&&(t.multipartReq.removeAllListeners("success"),t.multipartReq.removeAllListeners("error"),t.multipartReq.removeAllListeners("complete"),delete t.multipartReq),t.service.config.params.UploadId&&!t.leavePartsOnError?t.service.abortMultipartUpload().send():t.leavePartsOnError&&(t.isDoneChunking=!1),AWS.util.each(t.parts,(function(e,t){t.removeAllListeners("complete"),t.abort()})),t.activeParts=0,t.partPos=0,t.numParts=0,t.totalPartNumbers=0,t.parts={},t.failed=!0,t.callback(e))},finishMultiPart:function(){var e=this,t={MultipartUpload:{Parts:e.completeInfo.slice(1)}};e.service.completeMultipartUpload(t,(function(t,r){if(t)return e.cleanup(t);if(r&&"string"==typeof r.Location&&(r.Location=r.Location.replace(/%2F/g,"/")),Array.isArray(e.tags)){for(var a=0;a<e.tags.length;a++)e.tags[a].Value=String(e.tags[a].Value);e.service.putObjectTagging({Tagging:{TagSet:e.tags}},(function(t,a){t?e.callback(t):e.callback(t,r)}))}else e.callback(t,r)}))},finishSinglePart:function(e,t){var r=this.request._managedUpload,a=this.request.httpRequest,i=a.endpoint;if(e)return r.callback(e);t.Location=[i.protocol,"//",i.host,a.path].join(""),t.key=this.request.params.Key,t.Key=this.request.params.Key,t.Bucket=this.request.params.Bucket,r.callback(e,t)},progress:function(e){var t=this._managedUpload;"putObject"===this.operation?(e.part=1,e.key=this.params.Key):(t.totalUploadedBytes+=e.loaded-this._lastUploadedBytes,this._lastUploadedBytes=e.loaded,e={loaded:t.totalUploadedBytes,total:t.totalBytes,part:this.params.PartNumber,key:this.params.Key}),t.emit("httpUploadProgress",[e])}}),AWS.util.mixin(AWS.S3.ManagedUpload,AWS.SequentialExecutor),AWS.S3.ManagedUpload.addPromisesToClass=function(e){this.prototype.promise=AWS.util.promisifyMethod("send",e)},AWS.S3.ManagedUpload.deletePromisesFromClass=function(){delete this.prototype.promise},AWS.util.addPromises(AWS.S3.ManagedUpload),module.exports=AWS.S3.ManagedUpload;
//# sourceMappingURL=/sm/2bbd2c07a45249675f34199cb39083c236918562d5d91fba24bc371cf52e3671.map