/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/@aws-sdk/client-s3@3.296.0/dist-cjs/waiters/waitForBucketNotExists.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.waitUntilBucketNotExists=exports.waitForBucketNotExists=void 0;const util_waiter_1=require("@aws-sdk/util-waiter"),HeadBucketCommand_1=require("../commands/HeadBucketCommand"),checkState=async(t,e)=>{let a;try{a=await t.send(new HeadBucketCommand_1.HeadBucketCommand(e))}catch(t){if(a=t,t.name&&"NotFound"==t.name)return{state:util_waiter_1.WaiterState.SUCCESS,reason:a}}return{state:util_waiter_1.WaiterState.RETRY,reason:a}},waitForBucketNotExists=async(t,e)=>(0,util_waiter_1.createWaiter)({minDelay:5,maxDelay:120,...t},e,checkState);exports.waitForBucketNotExists=waitForBucketNotExists;const waitUntilBucketNotExists=async(t,e)=>{const a=await(0,util_waiter_1.createWaiter)({minDelay:5,maxDelay:120,...t},e,checkState);return(0,util_waiter_1.checkExceptions)(a)};exports.waitUntilBucketNotExists=waitUntilBucketNotExists;
//# sourceMappingURL=/sm/086038d4defba294276d5a436465a91be7ebdcc0194709ab8df2f03d9628c4cc.map