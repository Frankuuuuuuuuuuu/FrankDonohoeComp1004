/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/@aws-sdk/client-s3@3.296.0/dist-es/waiters/waitForBucketNotExists.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{checkExceptions,createWaiter,WaiterState}from"@aws-sdk/util-waiter";import{HeadBucketCommand}from"../commands/HeadBucketCommand";const checkState=async(t,e)=>{let a;try{a=await t.send(new HeadBucketCommand(e))}catch(t){if(a=t,t.name&&"NotFound"==t.name)return{state:WaiterState.SUCCESS,reason:a}}return{state:WaiterState.RETRY,reason:a}};export const waitForBucketNotExists=async(t,e)=>createWaiter({minDelay:5,maxDelay:120,...t},e,checkState);export const waitUntilBucketNotExists=async(t,e)=>{const a=await createWaiter({minDelay:5,maxDelay:120,...t},e,checkState);return checkExceptions(a)};
//# sourceMappingURL=/sm/0ff2d4d2af728c64ebbc8d3037e26ace30bef0ddfdcc81a79b8449cf0a6645e3.map