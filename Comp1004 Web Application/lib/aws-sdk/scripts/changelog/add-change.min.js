/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/scripts/changelog/add-change.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var ChangeCreator=require("./change-creator").ChangeCreator;function AddChangeCli(){this._changeCreator=new ChangeCreator,this._maxRetries=2,this._retryCount=0}AddChangeCli.prototype={print:function(t){process.stdout.write(t)},showIntro:function(){this.print('\nThis utility will walk you through creating a changelog entry.\n\nA changelog entry requires:\n\t- type: Type should be one of: feature, bugfix.\n\t- category: This can be a service identifier (e.g. "s3"), or something like: Paginator.\n\t- description: A brief description of the change.\n\t    You can also include a github style reference such as "#111".\n\nPlease run this script before submitting a pull request.\n\nPress ^C at any time to quit.\n')},retrieveInputAsync:function(){return new Promise((function(t,e){process.stdin.setEncoding("utf8"),process.stdin.on("readable",(function e(){var r=process.stdin.read();null!==r&&(process.stdin.removeListener("readable",e),t(r.trim()))}))}))},promptType:function(){var t=this._changeCreator.getChangeType();return this.print('\nValid types are "feature" or "bugfix"\n'),this.print("type: "+(t?"("+t+") ":"")),this.retrieveInputAsync().then(this.processType.bind(this))},promptCategory:function(){var t=this._changeCreator.getChangeCategory();return this.print("\nCategory can be a service identifier or something like: Paginator\n"),this.print("category: "+(t?"("+t+") ":"")),this.retrieveInputAsync().then(this.processCategory.bind(this))},promptDescription:function(){var t=this._changeCreator.getChangeDescription();return this.print("\nA brief description of your change.\n"),this.print("description: "+(t?"("+t+") ":"")),this.retrieveInputAsync().then(this.processDescription.bind(this))},processType:function(t){var e=this._changeCreator;t=t.toLowerCase();try{t&&e.setChangeType(t),e.validateChangeType(t)}catch(t){return this.print(t.message+"\n"),this._retryCount<this._maxRetries?(this._retryCount++,this.promptType()):Promise.reject()}return this._retryCount=0,Promise.resolve()},processCategory:function(t){var e=this._changeCreator;try{t&&e.setChangeCategory(t),e.validateChangeCategory(t)}catch(t){return this.print(t.message+"\n"),this._retryCount<this._maxRetries?(this._retryCount++,this.promptCategory()):Promise.reject()}return this._retryCount=0,Promise.resolve()},processDescription:function(t){var e=this._changeCreator;try{t&&e.setChangeDescription(t),e.validateChangeDescription(t)}catch(t){return this.print(t.message+"\n"),this._retryCount<this._maxRetries?(this._retryCount++,this.promptDescription()):Promise.reject()}return this._retryCount=0,Promise.resolve()},promptInputs:function(){var t=this;return this.promptType().then(this.promptCategory.bind(this)).then(this.promptDescription.bind(this)).catch((function(e){t.print(e.message)}))},writeChangeEntry:function(){var t=this;return new Promise((function(e,r){t._changeCreator.writeChanges((function(n,i){return n?r(n):(t.print("\nFile created at "+i.file+"\n"),e(i))}))}))}};var cli=new AddChangeCli;cli.showIntro(),cli.promptInputs().then(cli.writeChangeEntry.bind(cli)).then((function(){setTimeout((function(){process.exit(0)}),0)})).catch((function(t){cli.print(t.message),cli.print("\nExiting...\n"),setTimeout((function(){process.exit(1)}),0)}));
//# sourceMappingURL=/sm/a10aa84027138d9739dcfebc1f031af89b3f3aa61f03c20a2c88ebda8791e3b4.map