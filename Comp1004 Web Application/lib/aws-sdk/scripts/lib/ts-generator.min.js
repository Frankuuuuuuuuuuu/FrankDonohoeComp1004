/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/aws-sdk@2.1342.0/scripts/lib/ts-generator.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var fs=require("fs"),path=require("path"),pruneShapes=require("./prune-shapes").pruneShapes,CUSTOM_CONFIG_ENUMS={DUALSTACK:{FILE_NAME:"config_use_dualstack",INTERFACE:"UseDualstackConfigOptions"}};function TSGenerator(e){this._sdkRootDir=e.SdkRootDirectory||process.cwd(),this._apiRootDir=path.join(this._sdkRootDir,"apis"),this._metadataPath=path.join(this._apiRootDir,"metadata.json"),this._clientsDir=path.join(this._sdkRootDir,"clients"),this.metadata=null,this.typings={},this.streamTypes={}}TSGenerator.prototype.loadMetadata=function(){var e=fs.readFileSync(this._metadataPath);return this.metadata=JSON.parse(e),this.metadata},TSGenerator.prototype.fillApiModelFileNames=function(){var e=fs.readdirSync(this._apiRootDir);this.metadata||this.loadMetadata();var t=this.metadata;e=e.sort((function(e,t){return e<t?1:e>t?-1:0}));var r=Object.create(null);e.forEach((function(e){var t=e.match(/^(.+)(-[\d]{4}-[\d]{2}-[\d]{2})\.normal\.json$/i);if(t){var a=t[1],n=t[2].substring(1);r[a]?r[a].versions.push(n):r[a]={latestFileName:e,versions:[n]}}})),Object.keys(t).forEach((function(a){var n=t[a].prefix||a,i=r[n];t[a].api_path=i.latestFileName;var o=i.latestFileName.split(".")[0];e.indexOf(o+".waiters2.json")>=0&&(t[a].waiters_path=o+".waiters2.json"),t[a].versions||(t[a].versions=[]),t[a].versions=[].concat(t[a].versions,i.versions)}))},TSGenerator.prototype.updateDynamoDBDocumentClient=function(){for(var e=fs.readFileSync(path.join(this._sdkRootDir,"lib","dynamodb","document_client.d.ts")).toString().split("\n"),t=-1,r=-1,a=0,n=e.length;a<n;a++){var i=e[a];if(i.indexOf("//\x3c!--auto-generated start--\x3e")>=0&&(t=a),i.indexOf("//\x3c!--auto-generated end--\x3e")>=0){r=a;break}}if(t>=0&&r>=0){e.splice(t+1,r-t-1,this.generateDocumentClientInterfaces(1));var o=e.join("\n");this.writeTypingsFile("document_client",path.join(this._sdkRootDir,"lib","dynamodb"),o)}},TSGenerator.prototype.generateDocumentClientInterfaces=function(e){e=e||0;var t=this,r=this.loadServiceApi("dynamodb"),a="";a+=this.tabs(e)+"interface Blob {}\n";var n=r.shapes;return Object.keys(n).forEach((function(i){var o=n[i];if(!o.exception)return"AttributeValue"===i?(a+=t.generateDocString("A JavaScript object or native type.",e),void(a+=t.tabs(e)+"export type "+i+" = any;\n")):void(a+=t.generateTypingsFromShape(r,i,o,e,[]))})),a},TSGenerator.prototype.loadServiceApi=function(e){var t,r=this.metadata,a=path.join(this._apiRootDir,r[e].api_path),n=fs.readFileSync(a),i=JSON.parse(n);if(r[e].waiters_path){t=path.join(this._apiRootDir,r[e].waiters_path);var o=fs.readFileSync(t),s=JSON.parse(o);i.waiters=s.waiters}return i},TSGenerator.prototype.checkRequired=function(e,t){return e.indexOf(t)>=0},TSGenerator.prototype.tabs=function(e){for(var t="",r=0;r<e;r++)t+="  ";return t},TSGenerator.prototype.transformDocumentation=function(e){return e?e=(e=e.replace(/<(?:.|\n)*?>/gm,"")).replace(/\*\//g,"*"):""},TSGenerator.prototype.generateDocString=function(e,t){t=t||0;var r="";return r+=this.tabs(t)+"/**\n",r+=this.tabs(t)+" * "+this.transformDocumentation(e)+"\n",r+=this.tabs(t)+" */\n"},TSGenerator.prototype.generateCustomConfigFromMetadata=function(e){var t=[],r=this.metadata[e];for(var a in r)if(r.hasOwnProperty(a)&&"dualstackAvailable"===a)t.push(CUSTOM_CONFIG_ENUMS.DUALSTACK);return t},TSGenerator.prototype.generateSafeShapeName=function(e,t){return(t=t||[]).indexOf(e)>=0?"_"+e:e},TSGenerator.prototype.extractTypesDependOnStream=function(e,t){var r=[];if("object"!=typeof t||0===Object.keys(t).length)return[];if(t.streaming)return r.push(e),r;for(var a in t){var n=t[a],i=this.extractTypesDependOnStream(a,n);if(0!==Object.keys(i).length)for(var o of i)r.push(o)}return r},TSGenerator.prototype.addReadableType=function(e){var t="";return(this.streamTypes[e]||"_"===e[0]&&this.streamTypes[e.slice(1)])&&(t+="|Readable"),t},TSGenerator.prototype.generateTypingsFromShape=function(e,t,r,a,n){if(["string","boolean","number"].indexOf(t)>=0)return"";["Date","Blob"].indexOf(t)>=0&&(t="_"+t),t=this.generateSafeShapeName(t,n);var i=this,o="";a=a||0;var s=this.tabs,p=r.type;if(r.eventstream){var c=(u=Object.keys(r.members)).map((function(e){return e+"?:"+r.members[e].shape}));return o+=s(a)+"export type "+t+" = EventStream<{"+c.join(",")+"}>;\n"}if("structure"===p){if(r.isDocument)return o+=s(a)+"export type "+t+" = DocumentType;\n";o+=s(a)+"export interface "+t+" {\n";var u=r.members;Object.keys(u).forEach((function(t){var p=u[t];p.documentation&&(o+=i.generateDocString(p.documentation,a+1));var c=i.checkRequired(r.required||[],t)?"":"?",h=p.shape;p.eventpayload&&["blob","binary"].indexOf(e.shapes[h].type)>=0&&(h="Buffer"),h=i.generateSafeShapeName(h,[].concat(n,["Date","Blob"])),o+=s(a+1)+t+c+": "+h+";\n"})),o+=s(a)+"}\n"}else if("list"===p)o+=s(a)+"export type "+t+" = "+this.generateSafeShapeName(r.member.shape,n)+"[];\n";else if("map"===p)o+=s(a)+"export type "+t+" = {[key: string]: "+this.generateSafeShapeName(r.value.shape,n)+"};\n";else if("string"===p||"character"===p){var h="string";Array.isArray(r.enum)&&(h=r.enum.map((function(e){return'"'+e+'"'})).join("|")+"|"+h),o+=s(a)+"export type "+t+" = "+h+";\n"}else["double","long","short","biginteger","bigdecimal","integer","float"].indexOf(p)>=0?o+=s(a)+"export type "+t+" = number;\n":"timestamp"===p?o+=s(a)+"export type "+t+" = Date;\n":"boolean"===p?o+=s(a)+"export type "+t+" = boolean;\n":"blob"!==p&&"binary"!==p||(o+=s(a)+"export type "+t+" = Buffer|Uint8Array|Blob|string"+i.addReadableType(t)+";\n");return o},TSGenerator.prototype.generateTypingsFromOperations=function(e,t,r,a){var n="";a=a||0;var i=this.tabs,o=t.input,s=t.output;r=r.charAt(0).toLowerCase()+r.substring(1);var p=o?e+".Types."+o.shape:"{}",c=s?e+".Types."+s.shape:"{}";return o&&(n+=this.generateDocString(t.documentation,a),n+=i(a)+r+"(params: "+p+", callback?: (err: AWSError, data: "+c+") => void): Request<"+c+", AWSError>;\n"),n+=this.generateDocString(t.documentation,a),n+=i(a)+r+"(callback?: (err: AWSError, data: "+c+") => void): Request<"+c+", AWSError>;\n"},TSGenerator.prototype.generateConfigurationServicePlaceholders=function(){var e=this,t=this.metadata,r=Object.keys(t),a="",n="",i="";a+="import * as AWS from '../clients/all';\n",n+="export abstract class ConfigurationServicePlaceholders {\n",i+="export interface ConfigurationServiceApiVersions {\n",r.forEach((function(t){var r=e.metadata[t].name;n+=e.tabs(1)+t+"?: AWS."+r+".Types.ClientConfiguration;\n",i+=e.tabs(1)+t+"?: AWS."+r+".Types.apiVersion;\n"})),a+=(n+="}\n")+(i+="}\n"),this.writeTypingsFile("config_service_placeholders",path.join(this._sdkRootDir,"lib"),a)},TSGenerator.prototype.getServiceApiVersions=function(e){var t=this.metadata[e].versions||[];return t=t.map((function(e){return e.replace("*","")})).sort()},TSGenerator.prototype.generateTypingsFromWaiters=function(e,t,r,a,n){var i="";n=n||0;var o=r.operation.charAt(0).toLowerCase()+r.operation.substring(1),s="Waits for the "+(t=t.charAt(0).toLowerCase()+t.substring(1))+" state by periodically calling the underlying "+e+"."+o+"operation every "+r.delay+" seconds (at most "+r.maxAttempts+" times).";r.description&&(s+=" "+r.description);var p="{}",c="{}";return a.input&&(p=e+".Types."+a.input.shape),a.output&&(c=e+".Types."+a.output.shape),i+=this.generateDocString(s,n),i+=this.tabs(n)+'waitFor(state: "'+t+'", params: '+p+" & {$waiter?: WaiterConfiguration}, callback?: (err: AWSError, data: "+c+") => void): Request<"+c+", AWSError>;\n",i+=this.generateDocString(s,n),i+=this.tabs(n)+'waitFor(state: "'+t+'", callback?: (err: AWSError, data: '+c+") => void): Request<"+c+", AWSError>;\n"},TSGenerator.prototype.includeCustomService=function(e){var t=path.join(this._sdkRootDir,"lib","services"),r=fs.readdirSync(t);return!!(r=r.filter((function(t){return t===e+".d.ts"}))).length},TSGenerator.prototype.generateCustomNamespaceTypes=function(e,t){var r=this,a=require("./ts-customizations"),n=[],i="",o=a[e]||null;if(!o)return null;i+="declare namespace "+t+" {\n";var s="";return o.forEach((function(e){var t=[];(e.imports||[]).forEach((function(e){t.push(e.name+" as "+e.alias),i+=r.tabs(1)+"export import "+e.name+" = "+e.alias+";\n",n.push(e.name)})),t.length&&(s+="import {"+t.join(", ")+"} from '../"+e.path+"';\n")})),{importCode:s,namespaceCode:i+="}\n",customClassNames:n}},TSGenerator.prototype.containsEventStreams=function(e){var t=Object.keys(e.shapes);for(var r of t)if(e.shapes[r].eventstream)return!0;return!1},TSGenerator.prototype.containsDocumentType=function(e){var t=Object.keys(e.shapes);for(var r of t)if(e.shapes[r].isDocument)return!0;return!1},TSGenerator.prototype.processServiceModel=function(e){var t=this.loadServiceApi(e);pruneShapes(t);var r=this,a="",n=this.metadata[e].name,i=this.generateCustomNamespaceTypes(e,n),o=i?i.customClassNames:[],s=t.waiters||Object.create(null),p=Object.keys(s);a+="import {Request} from '../lib/request';\n",a+="import {Response} from '../lib/response';\n",a+="import {AWSError} from '../lib/error';\n";var c=this.includeCustomService(e),u=c?n+"Customizations":"Service";a+=c?"import {"+u+"} from '../lib/services/"+e+"';\n":"import {"+u+"} from '../lib/service';\n",p.length&&(a+="import {WaiterConfiguration} from '../lib/service';\n"),a+="import {ServiceConfigurationOptions} from '../lib/service';\n";var h=this.generateCustomConfigFromMetadata(e),f=!!h.length,l=["ServiceConfigurationOptions"];a+="import {ConfigBase as Config} from '../lib/config-base';\n",f&&h.forEach((function(e){a+="import {"+e.INTERFACE+"} from '../lib/"+e.FILE_NAME+"';\n",l.push(e.INTERFACE)})),this.containsEventStreams(t)&&(a+="import {EventStream} from '../lib/event-stream/event-stream';\n"),this.containsDocumentType(t)&&(a+="import {DocumentType} from '../lib/model';\n"),i&&(a+=i.importCode),a+="interface Blob {}\n";var m=t.operations,d=Object.keys(m);a+="declare class "+n+" extends "+u+" {\n",a+=this.generateDocString("Constructs a service object. This object has one method for each API operation.",1),a+=this.tabs(1)+"constructor(options?: "+n+".Types.ClientConfiguration)\n",a+=this.tabs(1)+"config: Config & "+n+".Types.ClientConfiguration;\n",d.forEach((function(e){a+=r.generateTypingsFromOperations(n,m[e],e,1)})),p.forEach((function(e){var t=s[e],i=m[t.operation];a+=r.generateTypingsFromWaiters(n,e,t,i,1)})),a+="}\n",i&&(a+=i.namespaceCode);var y=t.shapes,v=Object.keys(y);if(a+="declare namespace "+n+" {\n",v.forEach((function(e){var t=y[e],a=r.extractTypesDependOnStream(e,t);for(var n of a)r.streamTypes[n]=!0})),v.forEach((function(e){var n=y[e];n.exception||(a+=r.generateTypingsFromShape(t,e,n,1,o))})),0!==Object.keys(r.streamTypes).length){var g=a.indexOf("interface Blob {}");a=a.slice(0,g)+"import {Readable} from 'stream';\n"+a.slice(g)}return this.streamTypes={},a+=this.generateDocString("A string in YYYY-MM-DD format that represents the latest possible API version that can be used in this service. Specify 'latest' to use the latest possible version.",1),a+=this.tabs(1)+'export type apiVersion = "'+this.getServiceApiVersions(e).join('"|"')+'"|"latest"|string;\n',a+=this.tabs(1)+"export interface ClientApiVersions {\n",a+=this.generateDocString("A string in YYYY-MM-DD format that represents the latest possible API version that can be used in this service. Specify 'latest' to use the latest possible version.",2),a+=this.tabs(2)+"apiVersion?: apiVersion;\n",a+=this.tabs(1)+"}\n",a+=this.tabs(1)+"export type ClientConfiguration = "+l.join(" & ")+" & ClientApiVersions;\n",a+=this.generateDocString("Contains interfaces for use with the "+n+" client.",1),a+=this.tabs(1)+"export import Types = "+n+";\n",a+="}\n",a+="export = "+n+";\n"},TSGenerator.prototype.writeTypingsFile=function(e,t,r){fs.writeFileSync(path.join(t,e+".d.ts"),r)},TSGenerator.prototype.generateAllClientTypings=function(){this.fillApiModelFileNames();var e=this,t=this.metadata;Object.keys(t).forEach((function(t){var r=e.processServiceModel(t);e.writeTypingsFile(t,e._clientsDir,r)}))},TSGenerator.prototype.generateGroupedClients=function(){var e=this.metadata,t="",r="";Object.keys(e).forEach((function(a){var n="export import "+e[a].name+" = require('./"+a+"');\n";t+=n,e[a].cors&&(r+=n)})),this.writeTypingsFile("all",this._clientsDir,t),this.writeTypingsFile("browser_default",this._clientsDir,r)},module.exports=TSGenerator;
//# sourceMappingURL=/sm/2201e80e2d84366c9dd6137b2b61a6fab8b4560bad5f8a66dabc6e642b270a58.map